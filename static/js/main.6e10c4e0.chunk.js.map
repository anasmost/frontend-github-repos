{"version":3,"sources":["components/repo-item/repo-item.jsx","components/repo-collection/repo-collection.effects.js","components/repo-collection/repo-collection.jsx","App.js","reportWebVitals.js","index.js"],"names":["RepoItem","name","description","stargazers_count","open_issues_count","owner","pushed_at","className","src","avatar_url","alt","login","dateTime","Date","toLocaleDateString","memo","$30DaysAgo","now","toISOString","console","log","apiURL","RepoCollection","useState","repos","setRepos","pageCount","setPageCount","scrollTargetRef","useRef","handleScroll","useCallback","e","target","scrollHeight","scrollTop","clientHeight","prevPageCount","current","onscroll","undefined","useEffect","fetchRepos","a","fetch","response","json","data","prevRepos","items","map","id","err","error","useFetchRepos","ref","otherRepoProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e10c4e0.chunk.js","sourcesContent":["import \"./repo-item.scss\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst RepoItem = ({\r\n  name,\r\n  description,\r\n  stargazers_count,\r\n  open_issues_count,\r\n  owner,\r\n  pushed_at,\r\n}) => {\r\n  return (\r\n    <article className=\"repo\">\r\n      <img\r\n        className=\"owner-avatar\"\r\n        src={owner.avatar_url}\r\n        alt={`${owner.login}'s avatar`}\r\n      />\r\n      <h2 className=\"name\">{name}</h2>\r\n      <p className=\"description\">{description ?? \"No Description\"}</p>\r\n      <div className=\"summary\">\r\n        <span className=\"stars\">Stars: {stargazers_count}</span>\r\n        <span className=\"issues\">Issues: {open_issues_count}</span>\r\n        Submitted on{\" \"}\r\n        <time dateTime={pushed_at}>\r\n          {new Date(pushed_at).toLocaleDateString()}\r\n        </time>{\" \"}\r\n        by <span className=\"owner-name\">{owner.login}</span>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default memo(RepoItem);\r\n","import { useEffect } from \"react\";\r\n\r\nexport const selectReposFromData = ({items}) => items.map(({id,name,\r\n  description,stargazers_count,open_issues_count, pushed_at, owner:{login,avatar_url}}) => ({\r\n  id,\r\n  name,\r\n  description,\r\n  stargazers_count,\r\n  open_issues_count,\r\n  pushed_at,\r\n  owner:{login,avatar_url},\r\n}));\r\n\r\nconst $30DaysAgo = new Date(Date.now() - 30*24*3600*1000).toISOString()\r\nconsole.log($30DaysAgo);\r\nconst apiURL = `https://api.github.com/search/repositories?q=created:>${$30DaysAgo}&sort=stars&order=desc`;\r\n\r\nexport const useFetchRepos = (setRepos, pageCount) => {\r\n\r\n  useEffect(() => {\r\n    const fetchRepos = async () => {\r\n      const response = await fetch(`${apiURL}&page=${pageCount}`);\r\n      const data = await response.json();\r\n\r\n      setRepos((prevRepos) =>\r\n        [\r\n          ...prevRepos,\r\n          ...selectReposFromData(data)\r\n        ]\r\n      );\r\n    };\r\n\r\n    try {\r\n      fetchRepos();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n  }, [pageCount]);\r\n\r\n};","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport RepoItem from \"../repo-item/repo-item\";\r\nimport { useFetchRepos } from \"./repo-collection.effects\";\r\nimport \"./repo-collection.scss\";\r\n\r\nconst RepoCollection = () => {\r\n  const [repos, setRepos] = useState([]);\r\n  const [pageCount, setPageCount] = useState(1);\r\n\r\n  const scrollTargetRef = useRef(null);\r\n\r\n  const handleScroll = useCallback((e) => {\r\n    console.log(\"handleScroll Called !!!!\");\r\n    const { target } = e;\r\n    if (target.scrollHeight - target.scrollTop < target.clientHeight * 1.5) {\r\n      setPageCount((prevPageCount) => ++prevPageCount);\r\n      scrollTargetRef.current.onscroll = undefined;\r\n    }\r\n  }, []);\r\n\r\n  useFetchRepos(setRepos, pageCount);\r\n\r\n  useEffect(() => {\r\n    scrollTargetRef.current.onscroll = handleScroll;\r\n  }, [repos]);\r\n\r\n  return (\r\n    <div className=\"repo-collection\" ref={scrollTargetRef}>\r\n      {repos.map(({ id, ...otherRepoProps }) => (\r\n        <RepoItem key={id} {...otherRepoProps} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoCollection;\r\n","import './App.scss';\r\nimport RepoCollection from './components/repo-collection/repo-collection';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\"><span className=\"star\">&#10022;</span> Most Starred Github Repos <span className=\"star\">&#10022;</span></h1>\r\n      <RepoCollection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}