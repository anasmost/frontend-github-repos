{"version":3,"sources":["components/repo-item/repo-item.tsx","components/repo-collection/useFetchRepos.effect.ts","components/with-spinner/spinner.svg","components/with-spinner/with-spinner.tsx","components/repo-collection/repo-collection.tsx","App.tsx","reportWebVitals.js","serviceWorkerRegistration.js","index.tsx"],"names":["RepoItem","_ref","id","name","description","stargazers_count","open_issues_count","owner","pushed_at","html_url","_jsxs","className","tabIndex","children","_jsx","href","target","rel","src","avatar_url","alt","login","dateTime","Date","toLocaleDateString","memo","apiURL","now","toISOString","selectReposFromData","items","map","_ref2","owner_html_url","useFetchRepos","callback","isLoading","page","setPage","useState","pageCount","repos","useEffect","async","response","fetch","status","data","json","_ref3","_selectReposFromData","fetchRepos","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgSpinner","svgRef","title","titleId","props","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","animationPlayState","animationDelay","width","height","viewBox","preserveAspectRatio","ref","cx","cy","fill","stroke","strokeWidth","attributeName","repeatCount","dur","values","keyTimes","keySplines","calcMode","begin","ForwardRef","WithSpinner","_Fragment","Spinner","RepoCollection","setIsLoading","repoCollectionDOMRef","useRef","handleScroll","useCallback","scrollHeight","scrollTop","clientHeight","current","onscroll","repoCollectionDOM","RepoProps","App","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.abcebab9.chunk.js","sourcesContent":["import \"./repo-item.scss\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Repo } from \"../repo-collection/useFetchRepos.effect\";\r\n\r\nconst RepoItem: FC<Repo> = ({\r\n  id,\r\n  name,\r\n  description,\r\n  stargazers_count,\r\n  open_issues_count,\r\n  owner,\r\n  pushed_at,\r\n  html_url,\r\n}) => {\r\n  return (\r\n    <article className=\"repo\" tabIndex={0} aria-label={`${name} repository`} aria-describedby={id}>\r\n      <a href={html_url} className=\"owner-avatar\" target=\"_blank\" rel=\"noreferrer\">\r\n        <img src={owner.avatar_url} alt={`${owner.login}'s avatar`} />\r\n      </a>\r\n      <a href={html_url} className=\"name\" target=\"_blank\" rel=\"noreferrer\">\r\n        <h2>{name}</h2>\r\n      </a>\r\n      <p className=\"description\" id={id}>\r\n        {description ?? \"No Description\"}\r\n      </p>\r\n      <div className=\"summary\">\r\n        <span className=\"stars\">Stars: {stargazers_count}</span>\r\n        <span className=\"issues\">Issues: {open_issues_count}</span>\r\n        <span className=\"submition\">\r\n          Submitted on <time dateTime={pushed_at}>{new Date(pushed_at).toLocaleDateString()}</time>{\" \"}\r\n          by{\" \"}\r\n          <a\r\n            className=\"owner-name\"\r\n            href={owner.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            tabIndex={0}\r\n            aria-label={`link of ${name} repository on github`}\r\n          >\r\n            {owner.login}\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default memo(RepoItem);\r\n","import React, { DependencyList, useEffect, useState } from \"react\";\r\n\r\nexport type Repo = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  stargazers_count: number;\r\n  open_issues_count: number;\r\n  pushed_at: string;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n    html_url: string;\r\n  };\r\n  html_url: string;\r\n};\r\ntype GithubRepo = Repo & object;\r\ntype PageState = {\r\n  pageCount: number;\r\n  repos: Array<Repo>;\r\n};\r\n\r\nconst $30DaysAgo: string = new Date(Date.now() - 30 * 24 * 3600 * 1000).toISOString();\r\nconst apiURL: string = `https://api.github.com/search/repositories?q=created:>${$30DaysAgo}&sort=stars&order=desc`;\r\n\r\nconst selectReposFromData = ({ items }: { items: Array<GithubRepo> }): Array<Repo> =>\r\n  items?.map(\r\n    ({\r\n      id,\r\n      name,\r\n      description,\r\n      stargazers_count,\r\n      open_issues_count,\r\n      pushed_at,\r\n      owner: { login, avatar_url, html_url: owner_html_url },\r\n      html_url,\r\n    }) => ({\r\n      id,\r\n      name,\r\n      description,\r\n      stargazers_count,\r\n      open_issues_count,\r\n      pushed_at,\r\n      owner: { login, avatar_url, html_url: owner_html_url },\r\n      html_url,\r\n    })\r\n  );\r\n\r\nconst useFetchRepos = (callback: () => void, isLoading: boolean): Array<Repo> => {\r\n  const [page, setPage] = useState<PageState>({\r\n    pageCount: 0,\r\n    repos: [],\r\n  });\r\n\r\n  useEffect(\r\n    (): void => {\r\n      if (isLoading) {\r\n        const fetchRepos = async () => {\r\n          const response: Response = await fetch(`${apiURL}&page=${page.pageCount + 1}`);\r\n\r\n          if (response.status === 200) {\r\n            const data = await response.json();\r\n\r\n            setPage(({ pageCount, repos }) => ({\r\n              pageCount: ++pageCount,\r\n              repos: [...repos, ...(selectReposFromData(data) ?? [])],\r\n            }));\r\n          }\r\n\r\n          callback();\r\n        };\r\n\r\n        fetchRepos();\r\n      }\r\n    },\r\n    [isLoading] as DependencyList\r\n  );\r\n\r\n  return page.repos;\r\n};\r\n\r\nexport default useFetchRepos;\r\n","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSpinner(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\",\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    r: 0,\n    fill: \"none\",\n    stroke: \"#749d34\",\n    strokeWidth: 2,\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"r\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0;40\",\n    keyTimes: \"0;1\",\n    keySplines: \"0 0.2 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"0s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"opacity\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"1;0\",\n    keyTimes: \"0;1\",\n    keySplines: \"0.2 0 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"0s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  })), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    r: 0,\n    fill: \"none\",\n    stroke: \"#ccccee\",\n    strokeWidth: 2,\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"r\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0;40\",\n    keyTimes: \"0;1\",\n    keySplines: \"0 0.2 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"-0.5s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"opacity\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"1;0\",\n    keyTimes: \"0;1\",\n    keySplines: \"0.2 0 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"-0.5s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.96eb793c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { ReactNode } from \"react\";\r\nimport \"./with-spinner.styles.scss\";\r\nimport { ReactComponent as Spinner } from \"./spinner.svg\";\r\n\r\ntype WithSpinnerProps = {\r\n  isLoading: boolean;\r\n  children: ReactNode;\r\n};\r\n\r\nconst WithSpinner = ({ isLoading, children }: WithSpinnerProps) => (\r\n  <>\r\n    {isLoading && <Spinner className=\"spinner\" />}\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default WithSpinner;\r\n","import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport RepoItem from \"../repo-item/repo-item\";\r\nimport useFetchRepos, { Repo } from \"./useFetchRepos.effect\";\r\nimport \"./repo-collection.scss\";\r\nimport WithSpinner from \"../with-spinner/with-spinner\";\r\n\r\nconst RepoCollection: FC = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const repoCollectionDOMRef = useRef<HTMLElement>(null);\r\n\r\n  const handleScroll = useCallback<EventListener>((e) => {\r\n    const target = e.target as HTMLElement;\r\n    if (target.scrollHeight - target.scrollTop < target.clientHeight * 1.5) {\r\n      setIsLoading(true);\r\n      repoCollectionDOMRef.current!.onscroll = null;\r\n    }\r\n  }, []);\r\n\r\n  const repos: Array<Repo> = useFetchRepos(() => setIsLoading(false), isLoading);\r\n\r\n  useEffect(() => {\r\n    const repoCollectionDOM = repoCollectionDOMRef.current;\r\n    if (!isLoading) {\r\n      repoCollectionDOM!.onscroll = handleScroll;\r\n      return () => {\r\n        repoCollectionDOM!.onscroll = null;\r\n      };\r\n    }\r\n  }, [handleScroll, isLoading]);\r\n\r\n  return (\r\n    <WithSpinner isLoading={isLoading}>\r\n      <main className=\"repo-collection\" ref={repoCollectionDOMRef}>\r\n        {repos.map((RepoProps) => (\r\n          <RepoItem key={RepoProps.id} {...RepoProps} />\r\n        ))}\r\n      </main>\r\n    </WithSpinner>\r\n  );\r\n};\r\n\r\nexport default RepoCollection;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport RepoCollection from \"./components/repo-collection/repo-collection\";\r\n\r\nconst App: React.FunctionComponent = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\">\r\n        <span className=\"star\">&#10022;</span> Most Starred Github Repos{\" \"}\r\n        <span className=\"star\">&#10022;</span>\r\n      </h1>\r\n      <RepoCollection />\r\n      <footer className=\"footer\">\r\n        <address>\r\n          {/* eslint-disable-next-line react/jsx-no-target-blank */}\r\n          <a href=\"https://anasmost-bio.vercel.app/\" target=\"_blank\">\r\n            Always Up to date\r\n            <span>\r\n              <img\r\n                src=\"https://anasmost-bio.vercel.app/_next/static/media/favicon.91b328e8.ico\"\r\n                alt=\"Anas Mostafa\"\r\n              />\r\n              &copy;\r\n            </span>\r\n            {new Date().getFullYear()}\r\n          </a>\r\n        </address>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}