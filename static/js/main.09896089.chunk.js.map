{"version":3,"sources":["components/repo-item/repo-item.tsx","components/repo-collection/useFetchRepos.effect.ts","components/with-spinner/spinner.svg","components/with-spinner/with-spinner.tsx","components/repo-collection/repo-collection.tsx","App.tsx","reportWebVitals.js","serviceWorkerRegistration.js","index.tsx"],"names":["RepoItem","id","name","description","stargazers_count","open_issues_count","owner","pushed_at","className","tabIndex","aria-label","aria-describedby","src","avatar_url","alt","login","dateTime","Date","toLocaleDateString","href","html_url","target","rel","memo","$30DaysAgo","now","toISOString","apiURL","selectReposFromData","items","map","useFetchRepos","callback","isLoading","useState","pageCount","repos","page","setPage","useEffect","a","fetch","response","status","json","data","fetchRepos","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSpinner","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","animationPlayState","animationDelay","width","height","viewBox","preserveAspectRatio","ref","cx","cy","r","fill","stroke","strokeWidth","attributeName","repeatCount","dur","values","keyTimes","keySplines","calcMode","begin","ForwardRef","WithSpinner","children","RepoCollection","setIsLoading","repoCollectionDOMRef","useRef","handleScroll","useCallback","e","scrollHeight","scrollTop","clientHeight","current","onscroll","RepoProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.09896089.chunk.js","sourcesContent":["import \"./repo-item.scss\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Repo } from \"../repo-collection/useFetchRepos.effect\";\r\n\r\nconst RepoItem: FC<Repo> = ({\r\n  id,\r\n  name,\r\n  description,\r\n  stargazers_count,\r\n  open_issues_count,\r\n  owner,\r\n  pushed_at,\r\n}) => {\r\n  return (\r\n    <article\r\n      className=\"repo\"\r\n      tabIndex={0}\r\n      aria-label={`${name} repository`}\r\n      aria-describedby={id}\r\n    >\r\n      <img\r\n        className=\"owner-avatar\"\r\n        src={owner.avatar_url}\r\n        alt={`${owner.login}'s avatar`}\r\n      />\r\n      <h2 className=\"name\">{name}</h2>\r\n      <p className=\"description\" id={id}>\r\n        {description ?? \"No Description\"}\r\n      </p>\r\n      <div className=\"summary\">\r\n        <span className=\"stars\">Stars: {stargazers_count}</span>\r\n        <span className=\"issues\">Issues: {open_issues_count}</span>\r\n        <span className=\"submition\">\r\n          Submitted on{\" \"}\r\n          <time dateTime={pushed_at}>\r\n            {new Date(pushed_at).toLocaleDateString()}\r\n          </time>{\" \"}\r\n          by{\" \"}\r\n          <a\r\n            className=\"owner-name\"\r\n            href={owner.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n            tabIndex={0}\r\n            aria-label={`link of ${name} repository on github`}\r\n          >\r\n            {owner.login}\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default memo(RepoItem);\r\n","import React, {\r\n  DependencyList,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport type Repo = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  stargazers_count: number;\r\n  open_issues_count: number;\r\n  pushed_at: string;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n    html_url: string;\r\n  };\r\n};\r\ntype GithubRepo = Repo & object;\r\ntype PageState = {\r\n  pageCount: number;\r\n  repos: Array<Repo>;\r\n};\r\n\r\nconst $30DaysAgo: string = new Date(\r\n  Date.now() - 30 * 24 * 3600 * 1000\r\n).toISOString();\r\nconst apiURL: string = `https://api.github.com/search/repositories?q=created:>${$30DaysAgo}&sort=stars&order=desc`;\r\n\r\nconst selectReposFromData = ({\r\n  items,\r\n}: {\r\n  items: Array<GithubRepo>;\r\n}): Array<Repo> =>\r\n  items?.map(\r\n    ({\r\n      id,\r\n      name,\r\n      description,\r\n      stargazers_count,\r\n      open_issues_count,\r\n      pushed_at,\r\n      owner: { login, avatar_url, html_url },\r\n    }) => ({\r\n      id,\r\n      name,\r\n      description,\r\n      stargazers_count,\r\n      open_issues_count,\r\n      pushed_at,\r\n      owner: { login, avatar_url, html_url },\r\n    })\r\n  );\r\n\r\nconst useFetchRepos = (\r\n  callback: () => void,\r\n  isLoading: boolean\r\n): Array<Repo> => {\r\n  const [page, setPage] = useState<PageState>({\r\n    pageCount: 0,\r\n    repos: [],\r\n  });\r\n\r\n  useEffect(\r\n    (): void => {\r\n      if (isLoading) {\r\n        const fetchRepos = async () => {\r\n          const response: Response = await fetch(\r\n            `${apiURL}&page=${page.pageCount + 1}`\r\n          );\r\n\r\n          if (response.status === 200) {\r\n            const data = await response.json();\r\n\r\n            setPage(({ pageCount, repos }) => ({\r\n              pageCount: ++pageCount,\r\n              repos: [...repos, ...(selectReposFromData(data) ?? [])],\r\n            }));\r\n          }\r\n\r\n          callback();\r\n        };\r\n\r\n        fetchRepos();\r\n      }\r\n    },\r\n    [isLoading] as DependencyList\r\n  );\r\n\r\n  return page.repos;\r\n};\r\n\r\nexport default useFetchRepos;\r\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSpinner(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\",\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    r: 0,\n    fill: \"none\",\n    stroke: \"#749d34\",\n    strokeWidth: 2,\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"r\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0;40\",\n    keyTimes: \"0;1\",\n    keySplines: \"0 0.2 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"0s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"opacity\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"1;0\",\n    keyTimes: \"0;1\",\n    keySplines: \"0.2 0 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"0s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  })), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    r: 0,\n    fill: \"none\",\n    stroke: \"#ccccee\",\n    strokeWidth: 2,\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"r\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0;40\",\n    keyTimes: \"0;1\",\n    keySplines: \"0 0.2 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"-0.5s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"opacity\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"1;0\",\n    keyTimes: \"0;1\",\n    keySplines: \"0.2 0 0.8 1\",\n    calcMode: \"spline\",\n    begin: \"-0.5s\",\n    style: {\n      animationPlayState: \"running\",\n      animationDelay: \"0s\"\n    }\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.96eb793c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { ReactNode } from \"react\";\r\nimport \"./with-spinner.styles.scss\";\r\nimport { ReactComponent as Spinner } from \"./spinner.svg\";\r\n\r\ntype WithSpinnerProps = {\r\n  isLoading: boolean;\r\n  children: ReactNode;\r\n};\r\n\r\nconst WithSpinner = ({ isLoading, children }: WithSpinnerProps) => (\r\n  <>\r\n    {isLoading && <Spinner className=\"spinner\" />}\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default WithSpinner;\r\n","import React, {\r\n  DependencyList,\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport RepoItem from \"../repo-item/repo-item\";\r\nimport useFetchRepos, { Repo } from \"./useFetchRepos.effect\";\r\nimport \"./repo-collection.scss\";\r\nimport WithSpinner from \"../with-spinner/with-spinner\";\r\n\r\nconst RepoCollection: FC = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const repoCollectionDOMRef = useRef<HTMLElement>(null);\r\n\r\n  const handleScroll = useCallback<EventListener>((e) => {\r\n    const target = e.target as HTMLElement;\r\n    if (target.scrollHeight - target.scrollTop < target.clientHeight * 1.5) {\r\n      setIsLoading(true);\r\n      repoCollectionDOMRef.current!.onscroll = null;\r\n    }\r\n  }, [] as DependencyList);\r\n\r\n  const repos: Array<Repo> = useFetchRepos(\r\n    () => setIsLoading(false),\r\n    isLoading\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isLoading) {\r\n        repoCollectionDOMRef.current!.onscroll = handleScroll;\r\n        return () => {\r\n          repoCollectionDOMRef.current!.onscroll = null;\r\n        };\r\n      }\r\n    },\r\n    [isLoading] as DependencyList\r\n  );\r\n\r\n  return (\r\n    <WithSpinner isLoading={isLoading}>\r\n      <main className=\"repo-collection\" ref={repoCollectionDOMRef}>\r\n        {repos.map((RepoProps) => (\r\n          <RepoItem key={RepoProps.id} {...RepoProps} />\r\n        ))}\r\n      </main>\r\n    </WithSpinner>\r\n  );\r\n};\r\n\r\nexport default RepoCollection;\r\n","import React, { FC } from \"react\";\r\nimport \"./App.scss\";\r\nimport RepoCollection from \"./components/repo-collection/repo-collection\";\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\">\r\n        <span className=\"star\">&#10022;</span> Most Starred Github Repos{\" \"}\r\n        <span className=\"star\">&#10022;</span>\r\n      </h1>\r\n      <RepoCollection />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}